{"version":3,"sources":["../src/createUserWithEmailAndPassword.js"],"names":["createUserWithEmailAndPassword","email","password","Promise","resolve","reject","firebase","auth","then","unsubscribe","onAuthStateChanged","user","error","FirebaseProviderAuthenticationError"],"mappings":";;;;;kBAIwBA,8B;;AAJxB;;;;AACA;;AACA;;;;AAEe,SAASA,8BAAT,CAAwCC,KAAxC,EAA+CC,QAA/C,EAAyD;AACtE,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,uBACGC,IADH,GAEGP,8BAFH,CAEkCC,KAFlC,EAEyCC,QAFzC,EAGGM,IAHH,CAII,YAAM;AACJ,UAAMC,cAAcH,mBAASC,IAAT,GAAgBG,kBAAhB,CAAmC,UAACC,IAAD,EAAU;AAC/DF;AACAL,gBAAQ;AACNO,gBAAM,yBAAWA,IAAX;AADA,SAAR;AAGD,OALmB,CAApB;AAMD,KAXL,EAYI,UAACC,KAAD,EAAW;AACTP,aAAO,IAAIQ,2CAAJ,CAAwCD,KAAxC,CAAP;AACD,KAdL;AAgBD,GAjBM,CAAP;AAkBD","file":"createUserWithEmailAndPassword.js","sourcesContent":["import firebase from 'firebase'\nimport { createUser } from './helpers'\nimport { FirebaseProviderAuthenticationError } from './errors'\n\nexport default function createUserWithEmailAndPassword(email, password) {\n  return new Promise((resolve, reject) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(\n        () => {\n          const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n            unsubscribe()\n            resolve({\n              user: createUser(user),\n            })\n          })\n        },\n        (error) => {\n          reject(new FirebaseProviderAuthenticationError(error))\n        }\n      )\n  })\n}\n"]}