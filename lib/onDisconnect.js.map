{"version":3,"sources":["../src/onDisconnect.js"],"names":["setOnDisconnect","cancelOnDisconnect","ref","path","value","FirebaseProviderError","Error","onDisconnect","set","cancel"],"mappings":";;;;;QAKgBA,e,GAAAA,e;QAWAC,kB,GAAAA,kB;;AAhBhB;;AACA;;AAEA,IAAIC,MAAM,IAAV;;AAEO,SAASF,eAAT,CAAyBG,IAAzB,EAA+BC,KAA/B,EAAsC;AAC3C,MAAIF,GAAJ,EAAS;AACP,UAAM,IAAIG,6BAAJ,CACJ,IAAIC,KAAJ,CAAU,oCAAV,CADI,CAAN;AAGD;;AAEDJ,QAAM,wBAAUC,IAAV,CAAN;AACAD,MAAIK,YAAJ,GAAmBC,GAAnB,CAAuBJ,KAAvB;AACD;;AAEM,SAASH,kBAAT,GAA8B;AACnC,MAAI,CAACC,GAAL,EAAU;AACR,UAAM,IAAIG,6BAAJ,CAA0B,IAAIC,KAAJ,CAAU,6BAAV,CAA1B,CAAN;AACD;;AAEDJ,MAAIK,YAAJ,GAAmBE,MAAnB;AACAP,QAAM,IAAN;AACD","file":"onDisconnect.js","sourcesContent":["import { createRef } from './helpers'\nimport { FirebaseProviderError } from './errors'\n\nlet ref = null\n\nexport function setOnDisconnect(path, value) {\n  if (ref) {\n    throw new FirebaseProviderError(\n      new Error('You already have a setOnDisconnect')\n    )\n  }\n\n  ref = createRef(path)\n  ref.onDisconnect().set(value)\n}\n\nexport function cancelOnDisconnect() {\n  if (!ref) {\n    throw new FirebaseProviderError(new Error('You have no setOnDisconnect'))\n  }\n\n  ref.onDisconnect().cancel()\n  ref = null\n}\n"]}