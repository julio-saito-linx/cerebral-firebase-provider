{"version":3,"sources":["../src/index.js"],"names":["FirebaseProviderError","FirebaseProviderAuthenticationError","FirebaseProviderFactory","options","payload","firebase","initializeApp","config","cancelOnDisconnect","createUserWithEmailAndPassword","delete","deleteFile","deleteUser","getDownloadURL","getUser","getUserService","linkWithFacebook","linkWithGithub","linkWithGoogle","off","stopListening","onChildAdded","onChildChanged","onChildRemoved","onValue","push","put","remove","sendPasswordResetEmail","set","setOnDisconnect","signInAnonymously","signInAnonymouslyService","signInWithCustomToken","signInWithEmailAndPassword","signInWithFacebook","signInWithGithub","signInWithGoogle","signOut","signOutService","task","transaction","update","value","cache","sendTaskExecutionDetails"],"mappings":";;;;;;;;;;;;mBAiCSA,qB;;;;;;mBACAC,mC;;;kBAEeC,uB;;AApCxB;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAKe,SAASA,uBAAT,GAA4D;AAAA,MAA3BC,OAA2B,uEAAjB,EAAEC,SAAS,EAAX,EAAiB;;AACzEC,qBAASC,aAAT,CAAuBH,QAAQI,MAA/B;;AAEA,SAAO,wBACL;AACEC,wDADF;AAEEC,4EAFF;AAGEC,YAAQC,gBAHV;AAIEA,gCAJF;AAKEC,oCALF;AAMEC,4CANF;AAOEC,aAASC,iBAPX;AAQEC,gDARF;AASEC,4CATF;AAUEC,4CAVF;AAWEC,SAAKC,sBAXP;AAYEC,wCAZF;AAaEC,4CAbF;AAcEC,4CAdF;AAeEC,8BAfF;AAgBEC,wBAhBF;AAiBEC,sBAjBF;AAkBEC,4BAlBF;AAmBEC,4DAnBF;AAoBEC,sBApBF;AAqBEC,kDArBF;AAsBEC,uBAAmBC,2BAtBrB;AAuBEC,2BAAuBA,+BAvBzB;AAwBEC,oEAxBF;AAyBEC,wBAAoBA,4BAzBtB;AA0BEC,sBAAkBA,0BA1BpB;AA2BEC,sBAAkBA,0BA3BpB;AA4BEC,aAASC,iBA5BX;AA6BEC,UAAM,0BAAWrC,OAAX,CA7BR;AA8BEsC,sCA9BF;AA+BEC,4BA/BF;AAgCEC;AAhCF,GADK,EAmCL;AACEC,WAAO,CAACzC,QAAQ0C;AADlB,GAnCK,CAAP;AAuCD","file":"index.js","sourcesContent":["import { Provider } from 'cerebral'\nimport firebase from 'firebase'\nimport { stopListening } from './helpers'\nimport signInAnonymouslyService from './signInAnonymously'\nimport getUserService from './getUser'\nimport onChildAdded from './onChildAdded'\nimport onChildRemoved from './onChildRemoved'\nimport onChildChanged from './onChildChanged'\nimport onValue from './onValue'\nimport createTask from './createTask'\nimport value from './value'\nimport push from './push'\nimport set from './set'\nimport update from './update'\nimport put from './put'\nimport getDownloadURL from './getDownloadURL'\nimport deleteFile from './delete'\nimport remove from './remove'\nimport transaction from './transaction'\nimport createUserWithEmailAndPassword from './createUserWithEmailAndPassword'\nimport signInWithEmailAndPassword from './signInWithEmailAndPassword'\nimport signOutService from './signOut'\nimport signInWithFacebook from './signInWithFacebook'\nimport signInWithGoogle from './signInWithGoogle'\nimport signInWithGithub from './signInWithGithub'\nimport signInWithCustomToken from './signInWithCustomToken'\nimport deleteUser from './deleteUser'\nimport sendPasswordResetEmail from './sendPasswordResetEmail'\nimport linkWithFacebook from './linkWithFacebook'\nimport linkWithGithub from './linkWithGithub'\nimport linkWithGoogle from './linkWithGoogle'\nimport { setOnDisconnect, cancelOnDisconnect } from './onDisconnect'\n\nexport { FirebaseProviderError } from './errors'\nexport { FirebaseProviderAuthenticationError } from './errors'\n\nexport default function FirebaseProviderFactory(options = { payload: {} }) {\n  firebase.initializeApp(options.config)\n\n  return Provider(\n    {\n      cancelOnDisconnect,\n      createUserWithEmailAndPassword,\n      delete: deleteFile,\n      deleteFile,\n      deleteUser,\n      getDownloadURL,\n      getUser: getUserService,\n      linkWithFacebook,\n      linkWithGithub,\n      linkWithGoogle,\n      off: stopListening,\n      onChildAdded,\n      onChildChanged,\n      onChildRemoved,\n      onValue,\n      push,\n      put,\n      remove,\n      sendPasswordResetEmail,\n      set,\n      setOnDisconnect,\n      signInAnonymously: signInAnonymouslyService,\n      signInWithCustomToken: signInWithCustomToken,\n      signInWithEmailAndPassword,\n      signInWithFacebook: signInWithFacebook,\n      signInWithGithub: signInWithGithub,\n      signInWithGoogle: signInWithGoogle,\n      signOut: signOutService,\n      task: createTask(options),\n      transaction,\n      update,\n      value,\n    },\n    {\n      cache: !options.sendTaskExecutionDetails,\n    }\n  )\n}\n"]}