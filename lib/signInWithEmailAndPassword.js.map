{"version":3,"sources":["../src/signInWithEmailAndPassword.js"],"names":["signInWithEmailAndPassword","email","password","Promise","resolve","reject","firebase","auth","then","unsubscribe","onAuthStateChanged","user","error","FirebaseProviderAuthenticationError"],"mappings":";;;;;kBAIwBA,0B;;AAJxB;;;;AACA;;AACA;;;;AAEe,SAASA,0BAAT,CAAoCC,KAApC,EAA2CC,QAA3C,EAAqD;AAClE,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,uBACGC,IADH,GAEGP,0BAFH,CAE8BC,KAF9B,EAEqCC,QAFrC,EAGGM,IAHH,CAII,YAAM;AACJ,UAAMC,cAAcH,mBAASC,IAAT,GAAgBG,kBAAhB,CAAmC,UAACC,IAAD,EAAU;AAC/DF;AACAL,gBAAQ,yBAAWO,IAAX,CAAR;AACD,OAHmB,CAApB;AAID,KATL,EAUI,UAACC,KAAD,EAAW;AACTP,aAAO,IAAIQ,2CAAJ,CAAwCD,KAAxC,CAAP;AACD,KAZL;AAcD,GAfM,CAAP;AAgBD","file":"signInWithEmailAndPassword.js","sourcesContent":["import firebase from 'firebase'\nimport { createUser } from './helpers'\nimport { FirebaseProviderAuthenticationError } from './errors'\n\nexport default function signInWithEmailAndPassword(email, password) {\n  return new Promise((resolve, reject) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(\n        () => {\n          const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n            unsubscribe()\n            resolve(createUser(user))\n          })\n        },\n        (error) => {\n          reject(new FirebaseProviderAuthenticationError(error))\n        }\n      )\n  })\n}\n"]}