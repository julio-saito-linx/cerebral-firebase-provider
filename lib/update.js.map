{"version":3,"sources":["../src/update.js"],"names":["update","path","payload","ref","Object","keys","reduce","convertedPayload","key","replace","then","noReturnValue","catch","error","FirebaseProviderError"],"mappings":";;;;;kBAGwBA,M;;AAHxB;;AACA;;AAEe,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;AAC5C,MAAMC,MAAM,wBAAUF,IAAV,CAAZ;;AAEA,SAAOE,IACJH,MADI,CAEHI,OAAOC,IAAP,CAAYH,OAAZ,EAAqBI,MAArB,CAA4B,UAACC,gBAAD,EAAmBC,GAAnB,EAA2B;AACrDD,qBAAiBC,IAAIC,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,CAAjB,IAA4CP,QAAQM,GAAR,CAA5C;;AAEA,WAAOD,gBAAP;AACD,GAJD,EAIG,EAJH,CAFG,EAQJG,IARI,CAQCC,aARD,EASJC,KATI,CASE,UAACC,KAAD,EAAW;AAChB,UAAM,IAAIC,6BAAJ,CAA0BD,KAA1B,CAAN;AACD,GAXI,CAAP;AAYD","file":"update.js","sourcesContent":["import { createRef, noop as noReturnValue } from './helpers'\nimport { FirebaseProviderError } from './errors'\n\nexport default function update(path, payload) {\n  const ref = createRef(path)\n\n  return ref\n    .update(\n      Object.keys(payload).reduce((convertedPayload, key) => {\n        convertedPayload[key.replace(/\\./g, '/')] = payload[key]\n\n        return convertedPayload\n      }, {})\n    )\n    .then(noReturnValue)\n    .catch((error) => {\n      throw new FirebaseProviderError(error)\n    })\n}\n"]}